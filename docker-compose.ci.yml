#  CI version of docker-compose, does not use env_file just env vars
version: "3.7"

services:
  reverseproxy:
    build:
      context: ./udacity-c3-deployment/docker
      dockerfile: Dockerfile
    image: ncp-clound-project3-restapi-reverseproxy
    restart: always
    depends_on:
      - restapi-users
      - restapi-feed
    ports:
      - 8080:8080
  restapi-users:
    build:
      context: ./udacity-c3-restapi-user
      dockerfile: Dockerfile.prod
    image: ncp-clound-project3-restapi-user
    volumes:
      - $HOME/.aws:/root/.aws
    ports:
      - 8082:8080
    environment:
      - NODE_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_PROTOCOL=${DB_PROTOCOL}
      - JWT_SECRET=${JWT_SECRET}
      - S3_BUCKET=${S3_BUCKET}
      - AWS_REGION=${AWS_REGION}
      - AWS_PROFILE=${AWS_PROFILE}
  restapi-feed:
    build:
      context: ./udacity-c3-restapi-feed
      dockerfile: Dockerfile.prod
    image: ncp-clound-project3-restapi-feed
    volumes:
      - $HOME/.aws:/root/.aws
    ports:
      - 8081:8080
    environment:
      - NODE_ENV=production
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - DB_PROTOCOL=${DB_PROTOCOL}
      - JWT_SECRET=${JWT_SECRET}
      - S3_BUCKET=${S3_BUCKET}
      - AWS_REGION=${AWS_REGION}
      - AWS_PROFILE=${AWS_PROFILE}
  client:
    build:
      context: ./udacity-c3-frontend
      dockerfile: Dockerfile.prod
    image: ncp-clound-project3-restapi-client
    volumes:
      - $HOME/.aws:/root/.aws
    ports:
      - 8100:80
    environment:
      - NODE_ENV=production
