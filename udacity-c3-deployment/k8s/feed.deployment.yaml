apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    service: restapi-feed
  name: restapi-feed
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 3
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      service: restapi-feed
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        service: restapi-feed
    spec:
      containers:
        - env:
            - name: S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: S3_BUCKET
                  name: env-config
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  key: AWS_PROFILE
                  name: env-config
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  key: AWS_REGION
                  name: env-config
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: JWT_SECRET
                  name: env-secret
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: env-config
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: env-config
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  key: DB_PASS
                  name: env-secret
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: DB_USER
                  name: env-secret
          image: nicholaspretorius/ncp-clound-project3-restapi-feed:v1
          imagePullPolicy: Always
          name: restapi-feed
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 250m
              memory: 64Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /root/.aws/
              name: aws-secret
              readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: aws-secret
          secret:
            defaultMode: 420
            secretName: aws-secret
status: {}
